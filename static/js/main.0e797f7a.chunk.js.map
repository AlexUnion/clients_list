{"version":3,"sources":["components/modal/modal.module.css","components/listItem/listItem.module.css","components/addButton/addButton.module.css","components/notification/notification.module.css","components/namedInput/namedInput.component.tsx","components/warning/warning.component.tsx","components/modal/modal.component.tsx","common/providers/notificationProvider.tsx","hooks/notification.hook.ts","common/tool/tool.js","components/listItem/listItem.component.tsx","components/list/list.component.tsx","icons/add.svg","components/addButton/AddButton.component.tsx","App.tsx","components/notification/notification.component.tsx","index.tsx"],"names":["module","exports","NamedInput","props","id","description","name","register","value","placeHolder","className","htmlFor","type","autoComplete","defaultValue","ref","placeholder","Warning","message","Modal","title","user","handleCancel","onSubmit","useForm","handleSubmit","errors","s","container","action","required","minLength","firstName","lastName","phone","avatarUrl","btn","onClick","APINotificationContext","React","createContext","notification","addNotification","removeNotification","APINotificationProvider","children","useState","setNotification","contextValue","useCallback","status","Provider","useNotification","useContext","enableScroll","document","body","style","overflow","disableScroll","GRAPHQL_URL","ListItem","isEdit","setEdit","url","src","alt","edit","data","query","edited","gql","getMutationQuery","request","then","res","err","console","error","List","map","item","AddButton","anim","addIcon","getList","a","getClients","App","isNeedAdd","setNeedAdd","useQuery","useEffect","getAddNewUserQuery","e","Notification","classes","in","push","join","queryClient","QueryClient","ReactDOM","render","StrictMode","QueryClientProvider","client","getElementById"],"mappings":"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","file":"static/js/main.0e797f7a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"modal_container__Aoztu\",\"btn\":\"modal_btn__1NFiP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"edit\":\"listItem_edit__1tDLK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"anim\":\"addButton_anim__SsY-E\",\"appearance\":\"addButton_appearance__9EWTG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"in\":\"notification_in__x_9aZ\",\"right-in\":\"notification_right-in__1QP4v\"};","import React, {Ref} from \"react\";\r\n\r\ninterface IProps {\r\n    id: string,\r\n    description: string,\r\n    name: string,\r\n    register: Ref<HTMLInputElement> | undefined,\r\n    placeHolder?: string,\r\n    value?: string,\r\n}\r\n\r\nfunction NamedInput(props: IProps) {\r\n    const { id, description, name, register } = props;\r\n    const value = props.value || '';\r\n    const placeHolder = props.placeHolder || '';\r\n    return (\r\n        <div className='w-4/5 m-auto'>\r\n            <label htmlFor={id}>\r\n                <div className='mt-2 px-2 text-left cursor-pointer'>{description}</div>\r\n                <input className='mb-2 mt-1 py-2 px-8 rounded-md bg-gray-200 ml-0 w-full focus-within:bg-gray-300'\r\n                       type=\"text\"\r\n                       autoComplete=\"off\"\r\n                       id={id}\r\n                       name={name}\r\n                       defaultValue={value}\r\n                       ref={register}\r\n                       placeholder={placeHolder}/>\r\n            </label>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NamedInput;\r\n","import React from \"react\";\r\n\r\ninterface IProps {\r\n    message: string,\r\n}\r\n\r\nfunction Warning({ message }: IProps) {\r\n    return (\r\n        <div className=\"text-red-800 text-sm\">\r\n            * {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Warning;\r\n","import React from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport IClient from \"../../interfaces/Client\";\r\nimport NamedInput from \"../namedInput/namedInput.component\";\r\nimport s from './modal.module.css';\r\nimport Warning from \"../warning/warning.component\";\r\n\r\ninterface IProps {\r\n    title: string,\r\n    user?: IClient,\r\n    handleCancel: () => void,\r\n    onSubmit: (data: IFormInput) => void,\r\n}\r\n\r\ninterface IFormInput {\r\n    firstName: string,\r\n    lastName: string,\r\n    phone?: string,\r\n    avatarUrl?: string,\r\n}\r\n\r\nfunction Modal(props: IProps) {\r\n    const { title, user, handleCancel, onSubmit } = props;\r\n    const { register, handleSubmit, errors } = useForm<IFormInput>();\r\n\r\n    return (\r\n        <div className={`overflow-hidden w-screen h-screen fixed top-0 left-0 right-0 bottom-0 ${s.container}`}>\r\n            <div className='fixed bg-white w-1/2 top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 rounded-xl'>\r\n                <h3 className='text-3xl my-2'>{title}</h3>\r\n                <form action=\"\" onSubmit={handleSubmit(onSubmit)}>\r\n                    <NamedInput id='firstName'\r\n                                name='firstName'\r\n                                description='Введите имя'\r\n                                placeHolder='Ваше имя'\r\n                                register={register({\r\n                                    required: true,\r\n                                    minLength: 2\r\n                                })}\r\n                                value={user?.firstName}/>\r\n                    {\r\n                        errors.firstName?.type === 'required'\r\n                        && <Warning message='Это обезательное поле'/>\r\n                    }\r\n                    {\r\n                        (errors.firstName?.type === 'minLength'\r\n                            || errors.firstName?.type === 'maxLength')\r\n                        && <Warning message='Неккоректная длинна имени'/>\r\n                    }\r\n                    <NamedInput id='lastName'\r\n                                name='lastName'\r\n                                description='Введите фамилию'\r\n                                placeHolder='Ваша фамилия'\r\n                                register={register({\r\n                                    required: true,\r\n                                    minLength: 2\r\n                                })}\r\n                                value={user?.lastName}/>\r\n                    {\r\n                        errors.lastName?.type === 'required'\r\n                        && <Warning message='Это обезательное поле'/>\r\n                    }\r\n                    {\r\n                        (errors.lastName?.type === 'minLength'\r\n                            || errors.lastName?.type === 'maxLength')\r\n                        && <Warning message='Неккоректная длинна фамилии'/>\r\n                    }\r\n                    <NamedInput id='phone'\r\n                                name='phone'\r\n                                description='Введите номер телефона'\r\n                                placeHolder='Ваш номер телефона'\r\n                                register={register}\r\n                                value={user?.phone}/>\r\n                    <NamedInput id='avatarUrl'\r\n                                name='avatarUrl'\r\n                                description='Вставьте URL адресс вашей аватарки'\r\n                                placeHolder='URL'\r\n                                register={register}\r\n                                value={user?.avatarUrl}/>\r\n                    <div className=\"flex justify-end m-3\">\r\n                        <button className={`bg-green-500 ${s.btn} hover:bg-green-600`}\r\n                                type=\"submit\">Подтвердить</button>\r\n                        <button className={`bg-red-500 ${s.btn} hover:bg-red-600`}\r\n                                onClick={handleCancel}\r\n                                type=\"button\">Отменить</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Modal;\r\n","import React, { useState, useCallback } from 'react';\r\n\r\ninterface IProps{\r\n    children: any\r\n}\r\n\r\ntype Notification = {\r\n    message: string,\r\n    status: string\r\n}\r\ntype NotificationContext = {\r\n    notification: null | Notification,\r\n    addNotification: ((message: string, status: string) => void) | (() => void),\r\n    removeNotification: () => void,\r\n}\r\n\r\nexport const APINotificationContext = React.createContext<NotificationContext>({\r\n    notification: null,\r\n    addNotification: () => {},\r\n    removeNotification: () => {}\r\n});\r\n\r\nexport default function APINotificationProvider({ children }: IProps) {\r\n    const [notification, setNotification] = useState<Notification | null>(null);\r\n\r\n    const removeNotification = () => {\r\n        if (notification) {\r\n            setNotification(null);\r\n        }\r\n    }\r\n\r\n    const addNotification = (message: string, status: string) => setNotification({message, status});\r\n\r\n    const contextValue = {\r\n        notification,\r\n        addNotification: useCallback((message: string, status: string) => addNotification(message, status), []),\r\n        removeNotification: useCallback(() => removeNotification(), [])\r\n    };\r\n\r\n    return (\r\n        <APINotificationContext.Provider value={contextValue}>\r\n            {children}\r\n        </APINotificationContext.Provider>\r\n    );\r\n}\r\n","import { useContext } from 'react';\r\nimport { APINotificationContext } from \"../common/providers/notificationProvider\";\r\n\r\nconst useNotification = () => {\r\n    const { addNotification, notification, removeNotification } = useContext(APINotificationContext);\r\n    return { addNotification, notification, removeNotification };\r\n}\r\n\r\nexport default useNotification;\r\n","export const enableScroll = () => {\r\n    document.body.style.overflow = \"auto\";\r\n};\r\nexport const disableScroll = () => {\r\n    document.body.style.overflow = \"hidden\";\r\n};\r\n\r\nexport const GRAPHQL_URL = 'https://test-task.expane.pro/api/graphql';\r\n","import React, { useState } from \"react\";\r\nimport IClient from \"../../interfaces/Client\";\r\nimport s from './listItem.module.css';\r\nimport Modal from \"../modal/modal.component\";\r\nimport { gql, request } from \"graphql-request\";\r\nimport useNotification from \"../../hooks/notification.hook\";\r\nimport { disableScroll, enableScroll, GRAPHQL_URL } from \"../../common/tool/tool\";\r\n\r\ninterface IProps{\r\n    user: IClient,\r\n}\r\n\r\nconst getMutationQuery = (edited: IClient): string => {\r\n    const { id, firstName, lastName } = edited;\r\n    const phone = edited.phone || '';\r\n    const avatarUrl = edited.avatarUrl || '';\r\n    return gql`\r\n    mutation{\r\n        updateClient(id: ${id}, \r\n        firstName: \"${firstName}\", \r\n        lastName: \"${lastName}\", \r\n        phone: \"${phone}\",\r\n        avatarUrl: \"${avatarUrl}\"){\r\n            firstName: firstName,\r\n            lastName: lastName,\r\n            phone: phone,\r\n            avatarUrl: avatarUrl\r\n        }\r\n    }`;\r\n}\r\n\r\nconst defaultUrl = 'https://eitrawmaterials.eu/wp-content/uploads/2016/09/person-icon.png';\r\n\r\nfunction ListItem(props: IProps) {\r\n    const { user } = props;\r\n    const [isEdit, setEdit] = useState(false);\r\n    const { addNotification, removeNotification } = useNotification();\r\n    const handleEdit = () => {\r\n        disableScroll();\r\n        setEdit(true);\r\n    }\r\n    const handleCancel = () => {\r\n        enableScroll();\r\n        setEdit(false);\r\n    }\r\n    const url = user.avatarUrl || defaultUrl;\r\n\r\n    return (\r\n        <>\r\n            <div className='bg-gray-100 p-6 flex flex-shrink space-x-4 mb-1 rounded-xl justify-around items-center'>\r\n                <div className='w-1/5'>\r\n                    <img src={url} alt=\"\" className='h-12 w-12 rounded-xl'/>\r\n                </div>\r\n                <div className='w-3/5'>\r\n                    <div id={user.id}>\r\n                        {user.firstName}\r\n                        &nbsp;\r\n                        {user.lastName}\r\n                    </div>\r\n                    <div>\r\n                        {\r\n                            user.phone || 'Номер не указан'\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className='w-1/5'>\r\n                    <div className={`h-6 w-6 ml-auto mr-0 cursor-pointer ${s.edit}`}\r\n                         onClick={handleEdit}/>\r\n                </div>\r\n            </div>\r\n            {\r\n                isEdit ?\r\n                    <Modal title='Редактировать пользователя'\r\n                           user={user}\r\n                           handleCancel={handleCancel}\r\n                           onSubmit={(data) => {\r\n                               removeNotification();\r\n                               const query = getMutationQuery({\r\n                                   ...data,\r\n                                   id: user.id\r\n                               });\r\n                               request(GRAPHQL_URL, query)\r\n                                   .then((res) => {\r\n                                       addNotification('Пользователь обновлён', 'success');\r\n                                       handleCancel();\r\n                                   }, (err) => {\r\n                                       console.error(err);\r\n                                       addNotification('Ошибка', 'error');\r\n                                       handleCancel();\r\n                                   })\r\n                           }}/> :\r\n                    null\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListItem;\r\n","import React from \"react\";\r\nimport IClient from \"../../interfaces/Client\";\r\nimport ListItem from \"../listItem/listItem.component\";\r\n\r\ninterface IProps {\r\n    data: Array<IClient>,\r\n}\r\n\r\nfunction List(props: IProps) {\r\n    const { data } = props;\r\n    return (\r\n        <div className='max-w-lg mx-auto z-0'>\r\n            {\r\n                data.map((item) => {\r\n                    const { id } = item;\r\n                    return <ListItem key={id} user={item}/>;\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default List;\r\n","export default __webpack_public_path__ + \"static/media/add.02bb88b6.svg\";","import React from \"react\";\r\nimport addIcon from '../../icons/add.svg';\r\nimport s from './addButton.module.css';\r\n\r\ninterface IProps {\r\n    onClick: React.MouseEventHandler<HTMLDivElement>\r\n}\r\n\r\nfunction AddButton({ onClick }: IProps) {\r\n    return (\r\n        <div className={`${s.anim} w-10 h-10 fixed top-6 right-6 cursor-pointer z-0`}\r\n             onClick={onClick}>\r\n            <img src={addIcon} alt=\"add new user\"/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddButton;\r\n","import React, { useState, useEffect } from 'react';\nimport { request, gql } from 'graphql-request'\nimport { useQuery } from 'react-query';\nimport List from \"./components/list/list.component\";\nimport AddButton from \"./components/addButton/AddButton.component\";\nimport IClient from \"./interfaces/Client\";\nimport './App.css';\nimport useNotification from \"./hooks/notification.hook\";\nimport Modal from \"./components/modal/modal.component\";\nimport { disableScroll, enableScroll, GRAPHQL_URL } from \"./common/tool/tool\";\n\nconst query = gql`\n  query{\n  getClients{\n    id,\n    firstName,\n    lastName,\n    phone,\n    avatarUrl\n  }\n}`;\n\nfunction getAddNewUserQuery(firstName: string, lastName: string,\n                            phone: string = '', url: string = '') {\n    return gql`\n    mutation{\n        addClient(firstName: \"${firstName}\", \n            lastName: \"${lastName}\", \n            phone: \"${phone}\", \n            avatarUrl: \"${url}\") {\n                firstName: firstName,\n                lastName: lastName,\n                phone: phone,\n                avatarUrl: avatarUrl        \n        }  \n    }`;\n}\n\nasync function getList() {\n    const { getClients } = await request(GRAPHQL_URL, query);\n    return getClients;\n}\n\nfunction App() {\n    const [isNeedAdd, setNeedAdd] = useState(false);\n    const { addNotification, removeNotification } = useNotification();\n    const { data, error } = useQuery<Array<IClient>>('todos', getList);\n\n    useEffect(() => {\n        if (error) {\n            console.error(error);\n            addNotification('Упс... Что-то пошло не так', 'error');\n        }\n    }, [addNotification, error]);\n\n    useEffect(() => {\n        if (isNeedAdd){\n            disableScroll();\n        }\n        else {\n            enableScroll();\n        }\n    }, [isNeedAdd]);\n\n    const handleCancel = () => setNeedAdd(false);\n\n    return (\n        <div className=\"App\" >\n            <div className=\"my-4 text-3xl text-left max-w-xl mx-auto p-4 bg-gray-100 text-gray-900 rounded-md z-0\">\n                Список пользователей\n            </div>\n            {\n                data ?\n                    (\n                        <>\n                            <List data={data}/>\n                            <AddButton onClick={() => setNeedAdd(true)}/>\n                        </>\n                    ) :\n                    (\n                        <div className=\"my-6 text-lg\">\n                            loading\n                        </div>\n                    )\n            }\n            {\n                isNeedAdd ?\n                    (\n                        <Modal title=\"Добавить нового пользователя\"\n                               handleCancel={handleCancel}\n                               onSubmit={({ firstName, lastName, phone,\n                                              avatarUrl }) => {\n                                   handleCancel();\n                                   removeNotification();\n                                   const query = getAddNewUserQuery(firstName, lastName, phone, avatarUrl);\n                                   request(GRAPHQL_URL, query)\n                                       .then(() => {\n                                           addNotification('Пользователь успешно создан', 'success');\n                                       }, (e) => {\n                                           console.error(e?.message);\n                                           addNotification('Возникла ошибка во время операции', 'error');\n                                       })\n                               }}/>\n                    ) :\n                    null\n            }\n        </div>\n    );\n}\n\nexport default App;\n","import React from \"react\";\r\nimport useNotification from \"../../hooks/notification.hook\";\r\nimport s from './notification.module.css';\r\n\r\nconst style = \"fixed rounded-md bottom-8 right-6 p-4 cursor-pointer z-10\";\r\n\r\nfunction Notification() {\r\n    const { notification, removeNotification } = useNotification();\r\n    const classes = [style, s.in];\r\n\r\n    if (!notification) return null;\r\n\r\n    switch (notification.status) {\r\n        case \"success\": {\r\n            classes.push(\"bg-green-300\");\r\n            break;\r\n        }\r\n        case \"error\": {\r\n            classes.push(\"bg-red-300\");\r\n            break;\r\n        }\r\n        default: {\r\n            classes.push(\"bg-gray-300\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.join(' ')}\r\n             onClick={() => removeNotification()}>\r\n            <div className='pb-2 text-lg text-gray-900'>\r\n                Уведомление\r\n            </div>\r\n            <div className='text-gray-800'>\r\n                <div>\r\n                    {notification.message}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport App from './App';\nimport './index.css';\nimport APINotificationProvider from \"./common/providers/notificationProvider\";\nimport Notification from \"./components/notification/notification.component\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n    <React.StrictMode>\n        <QueryClientProvider client={queryClient}>\n            <APINotificationProvider>\n                <App />\n                <Notification/>\n            </APINotificationProvider>\n        </QueryClientProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}